<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html
        PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:ui="http://java.sun.com/jsf/facelets"
      xmlns:p="http://primefaces.org/ui"
      xmlns:h="http://java.sun.com/jsf/html"
      xmlns:f="http://java.sun.com/jsf/core"
      xmlns:ticket="http://java.sun.com/jsf/composite/ticketComponent"
      xmlns:controls="http://java.sun.com/jsf/composite/generalComponent"
      xmlns:user="http://java.sun.com/jsf/composite/userComponent"
      xml:lang="en" lang="en">
<ui:composition template="../templates/simpleTemplate.xhtml">
    <ui:define name="title">Ticket List</ui:define>
    <ui:define name="headArea">
        <h:outputStylesheet name="tickets.css" library="css"/>
        <h:outputStylesheet library="css" name="reusable.css"/>
    </ui:define>
    <ui:define name="content">
        <h:form id="viewForm">
            <p:dataTable id="ticketsDataView" var="ticket" value="#{ticketListBean.ticketLazyDataModel}"
                         lazy="true" rows="10" paginator="#{ticketListBean.ticketLazyDataModel.rowCount > 10}"
                         gridIcon="pi pi-th-large" listIcon="pi pi-bars" styleClass="ticketDataView"
                         emptyMessage="No tickets found"
                         tableStyle="table-layout: auto">
                <f:facet name="header">
                    <div style="width:100%; display: flex; flex-direction: row; justify-content: space-between;">
                        <p:commandButton value="Add Ticket" icon="pi pi-plus"
                                         style="margin-bottom: 0.5em;" styleClass="addTicketDialogButton"
                                         rendered="#{p:ifGranted('ROLE_ADD_TICKET')}"
                                         onclick="PF('PFAddTicketDialog').show()"/>
                        <controls:entityFilterComponent maskFields="#{ticketListBean.issueFilters}"
                                                        applyAction="#{ticketListBean.modelFiltersUpdateAction()}"
                                                        afterApplyActionUpdateSelectors="@(.ticketDataView)"/>
                    </div>
                </f:facet>
                <p:column styleClass="minimalTicketWidthColumn" style="width: 15%!important;">
                    <f:facet name="header">
                        <controls:sortableColumnHeader
                                addColumnToOrderAction="#{ticketListBean.changeSortOrderAction()}"
                                removeColumnFromOrderAction="#{ticketListBean.cancelSortedOrderAction()}"
                                afterActionUpdateSelectors="viewForm:ticketsDataView"
                                columnInOrderFiltersIndex="#{ticketListBean.getColumnKeyIndex('resolveState')}"
                                showIndex="#{ticketListBean.columnInOrderFilters('resolveState')}"
                                columnInFilters="#{ticketListBean.columnInOrderFilters('resolveState')}"
                                isAscending="#{ticketListBean.isAscending('resolveState')}"
                                columnKey="resolveState"
                                columnProperty="#{ticketListBean.columnKey}"
                                label="Ticket data:"/>
                    </f:facet>
                    <div>
                        <p:outputLabel value="Ticket:"/>
                    </div>
                    <p:link outcome="ticketDetail" includeViewParams="true">
                        <h:outputText value="#{ticket.uuid}"/>
                        <f:param name="uuid" value="#{ticket.uuid}"/>
                    </p:link>
                    <div class="stateLabelWrapper">
                        <ticket:stateLabel issueState="#{ticket.resolveState}"/>
                    </div>
                </p:column>
                <p:column>
                    <f:facet name="header">
                        <controls:sortableColumnHeader
                                addColumnToOrderAction="#{ticketListBean.changeSortOrderAction()}"
                                removeColumnFromOrderAction="#{ticketListBean.cancelSortedOrderAction()}"
                                afterActionUpdateSelectors="viewForm:ticketsDataView"
                                columnInOrderFiltersIndex="#{ticketListBean.getColumnKeyIndex('description')}"
                                showIndex="#{ticketListBean.columnInOrderFilters('description')}"
                                columnInFilters="#{ticketListBean.columnInOrderFilters('description')}"
                                isAscending="#{ticketListBean.isAscending('description')}"
                                columnKey="description"
                                columnProperty="#{ticketListBean.columnKey}"
                                label="Ticket description and reproduce steps:"/>
                    </f:facet>
                    <div class="descriptionWrapper">
                        <p:outputLabel value="Description:" style="font-weight: bold"/>
                        <br/>
                        <h:outputText value="#{ticket.description}" escape="false"
                                      style="white-space: pre;"/>
                    </div>
                    <div class="reproduceStepsWrapper">
                        <p:outputLabel value="Reproduce steps:" style="font-weight: bold"/>
                        <br/>
                        <h:outputText value="#{ticket.reproduceSteps}" escape="false"
                                      style="white-space: pre;"/>
                    </div>
                </p:column>
                <p:column headerText="Reported by:" styleClass="timeColumn">
                    <user:linkedUser user="#{ticket.user}"/>
                </p:column>
                <p:column styleClass="timeColumn">
                    <f:facet name="header">
                        <controls:sortableColumnHeader
                                addColumnToOrderAction="#{ticketListBean.changeSortOrderAction()}"
                                removeColumnFromOrderAction="#{ticketListBean.cancelSortedOrderAction()}"
                                afterActionUpdateSelectors="viewForm:ticketsDataView"
                                columnInOrderFiltersIndex="#{ticketListBean.getColumnKeyIndex('creationTime')}"
                                showIndex="#{ticketListBean.columnInOrderFilters('creationTime')}"
                                columnInFilters="#{ticketListBean.columnInOrderFilters('creationTime')}"
                                isAscending="#{ticketListBean.isAscending('creationTime')}"
                                columnKey="creationTime"
                                columnProperty="#{ticketListBean.columnKey}"
                                label="Creation Time"/>
                    </f:facet>
                    <h:outputText value="#{ticket.creationTime}" style="white-space: nowrap">
                        <f:convertDateTime type="both" pattern="#{appUtilBean.dateFormat}"/>
                    </h:outputText>
                </p:column>
                <p:column styleClass="controlsColumn" rendered="#{p:ifGranted('ROLE_DELETE_TICKET')}">
                    <div>
                        <p:commandButton icon="pi pi-trash"
                                         actionListener="#{ticketListBean.deleteTicket(ticket.uuid)}"
                                         process="@this"
                                         update=":viewForm:ticketsDataView"/>
                    </div>
                </p:column>
            </p:dataTable>
        </h:form>

        <p:dialog header="Add new Ticket" widgetVar="PFAddTicketDialog" styleClass="newTicketDialog">
            <h:form id="dialogForm">
                <p:panel id="ticketPanel" styleClass="ticketPanel">
                    <h:panelGrid columns="1" style="width: 100%">
                        <p:outputLabel value="Product version:"/>
                        <p:inputText value="#{addTicketBean.ticket.productVersion}"
                                     styleClass="newTicketProductVersion"/>

                        <p:outputLabel value="Description:"/>
                        <p:inputTextarea value="#{addTicketBean.ticket.description}" styleClass="newTicketDescription"/>

                        <p:outputLabel value="Reproduce steps:"/>
                        <p:inputTextarea value="#{addTicketBean.ticket.reproduceSteps}"
                                         styleClass="newTicketReproduceSteps"/>

                        <h:panelGroup layout="block">
                            <div style="overflow: auto; width: 100%; margin-top: 0.2em">
                                <p:commandButton value="Save" actionListener="#{addTicketBean.addTicket}"
                                                 style="float: right;" styleClass="saveNewTicketButton"
                                                 update=":viewForm:ticketsDataView ticketPanel"
                                                 process="@form"
                                                 rendered="#{p:ifGranted('ROLE_ADD_TICKET')}"
                                                 onsuccess="PF('PFAddTicketDialog').hide()"/>
                                <p:commandButton value="Cancel" actionListener="#{addTicketBean.clearTicket}"
                                                 style="float: right; margin-right: 0.5em"
                                                 update="ticketPanel" onclick="PF('PFAddTicketDialog').hide()"/>
                                <p:commandButton value="Clear" style="float: left;"
                                                 actionListener="#{addTicketBean.clearTicket}"
                                                 update="ticketPanel"/>
                            </div>
                        </h:panelGroup>
                    </h:panelGrid>
                </p:panel>
            </h:form>
        </p:dialog>
    </ui:define>
</ui:composition>
</html>